1
00:00:00,000 --> 00:00:03,194
지금 보시는 것은 jQuery 라이브러리입니다

2
00:00:03,280 --> 00:00:06,170
이게 전부에요

3
00:00:06,170 --> 00:00:09,340
실제로 이 코드들은 자바스크립트입니다

4
00:00:09,340 --> 00:00:10,500
다시 말하면,

5
00:00:10,500 --> 00:00:13,680
jQuery는 그저 자바스크립트 라이브러리라는 거죠

6
00:00:13,680 --> 00:00:17,260
이건 그 자체로 언어도 아니고,
몇 천 개의 다른 자바스크립트 라이브러리와도

7
00:00:17,260 --> 00:00:20,090
구조적으로 다르지 않습니다

8
00:00:21,550 --> 00:00:24,960
여기에는 여러분이 감당하지 못 할 마법 같은 건 없어요

9
00:00:24,960 --> 00:00:25,990
일주일 정도 배운 후에는

10
00:00:25,990 --> 00:00:29,230
여러분들 스스로 많은 jQuery의 기능들을
재구현할 수 있을 거라고 장담합니다

11
00:00:30,620 --> 00:00:32,759
isFunction이라는 메소드를 보시죠

12
00:00:32,759 --> 00:00:34,402
보이시나요?

13
00:00:34,402 --> 00:00:38,030
보세요, 이건 그저 들어가는 객체가
function 타입을 가지고 있으면

14
00:00:38,030 --> 00:00:39,560
true를 반환하는 거죠

15
00:00:40,690 --> 00:00:42,620
만약 여러분이 jQuery를 다시 만든다면

16
00:00:42,620 --> 00:00:46,380
여러분들의 라이브러리는 아마 jQuery 만큼 
성능이 뛰어나지는 않을 거예요

17
00:00:46,380 --> 00:00:49,340
하지만 여러분들은 jQuery가 제공하는
많은 메소드와 기능을

18
00:00:49,340 --> 00:00:51,890
꽤 쉽게 다시 만들 수 있을 겁니다

19
00:00:51,890 --> 00:00:56,340
순수한 자바스크립트(Vanilla Javascript)로 
DOM을 조작하는 것은 항상 쉽지는 않다는 점이

20
00:00:56,340 --> 00:00:58,220
jQuery가 존재하는 큰 이유죠

21
00:00:58,220 --> 00:01:01,240
예를 들어 자바스크립트로 새로운 DOM 노드를 넣으려면

22
00:01:01,240 --> 00:01:04,319
요소를 새로 만들고, 속성들을 지정하고

23
00:01:04,319 --> 00:01:10,130
새 노드의 내용을 채우고
곧 그 노드의 부모가 될 노드를 선택하고

24
00:01:10,130 --> 00:01:14,120
마지막으로 부모 노드의 자식으로 새 노드를 넣어야 하죠

25
00:01:14,120 --> 00:01:18,250
하지만 jQuery를 이용하면 이 모든 것들을 
하나의 함수로 할 수 있습니다

26
00:01:19,340 --> 00:01:21,400
그리고 웹사이트를 개발할 때

27
00:01:21,400 --> 00:01:24,890
환상적인 UX를 서로 다른 브라우저에서

28
00:01:24,890 --> 00:01:28,460
어떻게 만들지 걱정하지 않아도 됩니다

29
00:01:28,460 --> 00:01:33,560
jQuery는 여러분들이 특정 브라우저가 아니라 
UX에 집중할 수 있도록 존재하죠

30
00:01:33,560 --> 00:01:36,220
하지만 jQuery 함수를 쓰기 전에

31
00:01:36,220 --> 00:01:38,140
jQuery의 내부를 먼저 보도록 하죠
