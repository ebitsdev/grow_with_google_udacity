1
00:00:00,480 --> 00:00:03,180
지금까지 여러분은 브라우저 이벤트를 찾아보고

2
00:00:03,180 --> 00:00:05,230
로그가 기록되는 걸 지켜봤습니다

3
00:00:05,230 --> 00:00:08,680
이제는 jQuery로 이벤트를 감지하고 
반응해 볼 시간이네요

4
00:00:08,680 --> 00:00:12,760
그것들을 감지하고 반응하기 위해 세 항목이 필요합니다

5
00:00:12,760 --> 00:00:16,920
감지할 대상 요소, 반응할 이벤트,

6
00:00:16,920 --> 00:00:19,320
그리고 반응으로 취할 행동이죠

7
00:00:19,320 --> 00:00:20,440
예를 보여드릴게요

8
00:00:21,560 --> 00:00:25,210
먼저 jQuery가 이벤트를 위해 감지할 대상 요소가 필요하죠

9
00:00:26,070 --> 00:00:29,040
그래서 저는 jQuery로 인풋 필드를 선택할게요

10
00:00:29,770 --> 00:00:31,710
그리고 .on() 메소드를 호출했어요

11
00:00:31,710 --> 00:00:34,240
이 .on() 메소드가 바로 마법이 일어나는 부분이죠

12
00:00:34,240 --> 00:00:37,669
jQuery가 이벤트 리스너를 설정하기 위해 
주로 쓰는 방법입니다

13
00:00:38,630 --> 00:00:42,490
on 메소드의 첫 번째 값은 
제가 감지해내고 싶은 이벤트입니다

14
00:00:42,490 --> 00:00:44,190
이 예시에서는 keypress죠

15
00:00:44,190 --> 00:00:47,820
click이나 change 또는 mouseover 같은 
이름이 될 수도 있어요

16
00:00:48,620 --> 00:00:53,050
마지막으로 반응으로서 취할 행동으로 
함수를 보내야 합니다

17
00:00:53,050 --> 00:00:55,282
이 함수는 callback()이라고 불리죠

18
00:00:55,282 --> 00:00:57,890
on() 메소드에 보내진 callback() 함수는

19
00:00:57,890 --> 00:00:59,840
그냥 일반적인 자바스크립트 함수죠

20
00:00:59,840 --> 00:01:02,400
그래서 여러분이 원하는 
아무 자바스크립트 코드나 모두 포함할 수 있어요

21
00:01:02,400 --> 00:01:05,580
페이지 컨텐츠 변경 코드부터 분석 코드까지요

22
00:01:05,580 --> 00:01:08,820
페이지 색을 바꾸기 위해서 함수 내용을 바꿔 볼게요

23
00:01:09,650 --> 00:01:11,404
테스트 해보면

24
00:01:11,404 --> 00:01:13,809
짠, 괜찮네요

25
00:01:13,809 --> 00:01:16,969
다음 퀴즈에서는 여러분이 직접 
이벤트 리스너를 만들어 보겠습니다
