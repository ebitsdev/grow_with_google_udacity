1
00:00:00,350 --> 00:00:02,760
결국 $는 그저 함수입니다

2
00:00:02,760 --> 00:00:05,170
그럼 이제 그걸로 무얼 할 수 있죠?

3
00:00:05,170 --> 00:00:09,430
jQuery는 jQuery 집합이라는
'배열 같은' 객체를 리턴합니다

4
00:00:09,430 --> 00:00:13,550
우리가 그 객체를 '배열 같다'라고 
말하는 이유는 그 객체가

5
00:00:13,550 --> 00:00:17,900
배열처럼 보이고 작동하지만,
몇 개의 추가적인 메소드들을 포함하기 때문이죠

6
00:00:17,900 --> 00:00:20,275
여러분들이 문자열들을 jQuery 객체를 통해 보내면

7
00:00:20,275 --> 00:00:22,760
DOM 요소들의 jQuery 집합이 반환되게 됩니다

8
00:00:23,700 --> 00:00:29,640
예를 들어 Udacity 웹사이트에서
제가 #foo를 jQuery 객체에 보내면

9
00:00:29,640 --> 00:00:32,350
빈 배열이 돌아오는 것을 볼 수 있어요

10
00:00:32,350 --> 00:00:34,680
맞아요, 엄청 대단한 건 아니죠

11
00:00:34,680 --> 00:00:37,620
이런 문자열을 보내는 건 잠시 후에 볼게요

12
00:00:37,620 --> 00:00:39,510
그럼 함수를 보내려면요?

13
00:00:39,510 --> 00:00:41,160
이것도 가능합니다

14
00:00:41,160 --> 00:00:43,890
이 멋진 기술은 이 강의 마지막에

15
00:00:43,890 --> 00:00:44,950
다시 살펴볼게요

16
00:00:45,520 --> 00:00:48,540
여러분들이 만약 jQuery 메소드를 부르길 원한다면

17
00:00:48,540 --> 00:00:51,020
jQuery 객체에 DOM 요소도 보낼 수 있습니다

18
00:00:51,020 --> 00:00:56,178
$.ajax와 같이 jQuery 객체에 
직접 메소드를 호출할 수도 있죠

19
00:00:56,178 --> 00:01:00,270
$.ajax는 ajax의 복잡한 것들을 없앤

20
00:01:00,270 --> 00:01:03,560
jQuery 객체에서 호출할 수 있는 간단한 메소드입니다

21
00:01:03,560 --> 00:01:06,480
좀 더 배우고 싶으면
ajax 강의를 확인해보세요

22
00:01:06,480 --> 00:01:10,460
여기에서는 일반적인 자바스크립트 방식을
말하고 있다는 것을 알아두세요

23
00:01:10,460 --> 00:01:14,240
다시 말하지만 jQuery가 
자바스크립트 라이브러리라는 점은 매우 중요합니다

24
00:01:14,240 --> 00:01:15,920
jQuery는 언어가 아니에요

25
00:01:15,920 --> 00:01:18,530
jQuery 함수는 몇 개의 파라미터를 받고

26
00:01:18,530 --> 00:01:22,170
객체와 그 객체에 존재하는 몇 개의 메소드들을 반환하죠

27
00:01:22,170 --> 00:01:23,780
다른 자바스크립트 객체처럼요

28
00:01:24,900 --> 00:01:26,400
이게 제가 말하고 싶은 전부입니다

29
00:01:26,400 --> 00:01:28,190
이제 여러분들이 연습을 시작할 시간입니다
