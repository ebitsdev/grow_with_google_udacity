1
00:00:00,450 --> 00:00:03,280
让我们来看一下 jQuery 库

2
00:00:03,280 --> 00:00:06,170
这就是整个库

3
00:00:06,170 --> 00:00:09,340
全是 JavaScript

4
00:00:09,340 --> 00:00:10,500
让我重申一下

5
00:00:10,500 --> 00:00:13,680
jQuery 就是个 JavaScript 库

6
00:00:13,680 --> 00:00:17,060
它并不是一门独立的语言

7
00:00:17,060 --> 00:00:19,880
与其他数以千计的 JavaScript 并无不同

8
00:00:21,550 --> 00:00:24,960
没有什么是你不能自己搞明白的

9
00:00:24,960 --> 00:00:25,850
如果有一周的时间

10
00:00:25,850 --> 00:00:29,230
我肯定你可以复现 jQuery 的很多功能

11
00:00:30,620 --> 00:00:32,759
看这个方法 isFunction

12
00:00:32,759 --> 00:00:34,402
发现了么?

13
00:00:34,402 --> 00:00:37,940
它判断传入参数是否是函数

14
00:00:37,940 --> 00:00:39,310
再返回一个布尔值 true

15
00:00:40,690 --> 00:00:42,620
如果你重建 jQuery

16
00:00:42,620 --> 00:00:46,380
你的库的性能可能没有 jQuery 好

17
00:00:46,380 --> 00:00:49,340
但是你能复现大量相同的方法和函数

18
00:00:49,340 --> 00:00:51,890
跟 jQuery 提供的那些一样

19
00:00:51,890 --> 00:00:55,020
jQuery 存在的主要原因是

20
00:00:55,020 --> 00:00:58,220
纯 JavaScript 操纵 DOM 并不方便

21
00:00:58,220 --> 00:01:01,240
比如用 JavaScript 添加 DOM 节点

22
00:01:01,240 --> 00:01:04,319
要新建元素 设置属性和内容

23
00:01:04,319 --> 00:01:10,400
选定父节点

24
00:01:10,400 --> 00:01:13,770
最终将新节点作为子节点插入

25
00:01:13,770 --> 00:01:18,030
但在 jQuery 里 一个函数就可以搞定

26
00:01:19,340 --> 00:01:21,400
同时在网站开发过程中

27
00:01:21,400 --> 00:01:24,890
大家专注在提升用户体验上

28
00:01:24,890 --> 00:01:28,460
不想陷在各类浏览器细节当中

29
00:01:28,460 --> 00:01:33,560
jQuery 帮你专注于用户体验 而非浏览器的古怪特性

30
00:01:33,560 --> 00:01:36,220
在动手写 jQuery 函数前

31
00:01:36,220 --> 00:01:37,870
我们来看看 jQuery 底层的东西

